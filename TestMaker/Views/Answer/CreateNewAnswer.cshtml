@model AnswerViewModel

<div id="app">
    <v-app>
        @await Html.PartialAsync("~/Views/Shared/_RightSidePanelPartial.cshtml")
        @Html.AntiForgeryToken()
        <v-content>
            <v-container align-center justify-end row fill-height>
                <v-layout xs12 sm8 md6>
                    <v-flex xs12 sm8 md6>
                        <v-card class="elevation-15">
                            <v-toolbar color="deep-orange darken-3">
                                <v-toolbar-title>Add new answer</v-toolbar-title>
                                <v-spacer></v-spacer>
                            </v-toolbar>
                            <v-card-text>
                                <form asp-action="CreateNewAnswer" asp-controller="Answer" method="post">
                                    <v-text-field 
                                                  label="questionId" 
                                                  name="questionId" 
                                                  readonly 
                                                  v-show="false"
                                                  v-model="questionId"></v-text-field>
                                    <v-text-field 
                                                  label="Input answer" 
                                                  name="text" 
                                                  clearable
                                                  v-model="text"
                                                  v-validate="'required'"
                                                  :error-messages="errors.collect('text')"
                                                  data-vv-name="text"></v-text-field>
                                    <v-btn @@click="submit" color="blue darken-1">Create</v-btn>
                                </form>
                            </v-card-text>
                        </v-card>
                    </v-flex>
                </v-layout>
            </v-container>
        </v-content>
    </v-app>
</div>

@section Scripts{
    <script>
        var app = new Vue({
            el: '#app',
                        data() {
                            return {
                                questionId: "@ViewContext.RouteData.Values["id"]",
                                text:"",
                                drawer: true,
                                itemsForMembers: [
                                    { title: "Home", link: "/Home/Index/", icon: "home", id: "homeBtn" },
                                    { title: "Create test", link: "/Test/CreateTest/", icon: "ballot" },
                                    { title: "Graphs", link: "/Test/Graphs/", icon: "equalizer" }

                                ],
                                itemsLoginPartial: [
                                    { title: "Login", link: "/Account/Login/" },
                                    { title: "Register", link: "/Account/Register/" }
                                ],
                                itemsForAdmins: [
                                    { title: "Home", link: "/Home/Index/", icon: "home" },
                                    { title: "Manage user roles", link: "/Admin/ManageUserRoles/", icon: "dashboard" },
                                    { title: "Manage users", link: "/Admin/Members/", icon: "people" }
                                ],
                                headers: [
                                    { text: "Title", align: "center", sortable: false, value: "title" },
                                    { text: "Description", value: "description" },
                                    { text: "Create date", value: "createDate" },
                                    { text: "Last modified date", value: "lastMD" },
                                ],
                                dictionary: {
                                    attributes: {
                                        text: "answer"
                                    }
                                }
                            }
            },
            mounted() {
                this.$validator.localize('en', this.dictionary)
            },
            methods: {
                submit() {
                    this.$validator.validateAll().then((result) => {
                        if (result) {
                            data2send = JSON.stringify({ Text: this.text, QuestionId: this.questionId });
                            $.ajax({
                                url: "/Answer/CreateNewAnswer/",
                                type: "post",
                                beforeSend: function (request) {
                                    request.setRequestHeader("RequestVerificationToken", $("[name = '__RequestVerificationToken']").val());
                                },
                                contentType: "application/json",
                                data: data2send,
                                dataType: "json",
                                success: function (data) {
                                    window.location.href = data;
                                }
                            });
                        }
                    });
                }
            }
        })
    </script>
}

