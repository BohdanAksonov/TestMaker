@{ ViewData["Title"] = "Graphs";}


<div id="app">
    <v-app>
        @await Html.PartialAsync("~/Views/Shared/_RightSidePanelPartial.cshtml")
        @Html.AntiForgeryToken()
        <v-content>
            <v-container align-center justify-end row fill-height>
                <v-layout xs12 sm8 md6>
                    <v-flex>
                        <v-card class="elevation-15">
                            <v-toolbar color="deep-orange darken-3">
                                <v-toolbar-title>Graphs</v-toolbar-title>
                                <v-spacer></v-spacer>
                            </v-toolbar>
                            <v-card-text>
                                <v-container>
                                    <v-layout>
                                        <v-flex>
                                            <v-overflow-btn
                                                            :items="tests"
                                                            label="Choose test"
                                                            v-model="selectedTest"
                                                            v-on:change="onChange">
                                            </v-overflow-btn>
                                        </v-flex>
                                        <v-flex>
                                            <v-overflow-btn
                                                            :items="questions"
                                                            label="Choose question"
                                                            v-model="selectedQuestion"
                                                            v-on:change="onChangeQuestion">
                                            </v-overflow-btn>
                                        </v-flex>
                                    </v-layout>
                                </v-container>
                                <v-container>
                                    <v-layout>
                                        <v-flex>
                                            <v-btn block color="success" v-on:click="draw">Draw Chart</v-btn>
                                        </v-flex>
                                    </v-layout>
                                </v-container>
                                <v-container id="chart" style="width:500px; height:500px;">
                                </v-container>
                            </v-card-text>
                        </v-card>
                    </v-flex>
                </v-layout>
            </v-container>

        </v-content>
    </v-app>
</div>

@section Scripts{
<script>
        var app = new Vue({
            el: '#app',
            data() {
                return {
                    selectedTest: "",
                    selectedQuestion: "",
                    drawer: true,
                    itemsForMembers: [
                         { title: "Home", link: "/Home/Index/", icon: "home", id: "homeBtn" },
                         { title: "Create test", link: "/Test/CreateTest/", icon: "ballot" },
                         { title: "Graphs", link: "/Test/Graphs/", icon: "equalizer" }

                    ],
                    itemsLoginPartial: [
                         { title: "Login", link: "/Account/Login/" },
                         { title: "Register", link: "/Account/Register/" }
                    ],
                    itemsForAdmins: [
                         { title: "Home", link: "/Home/Index/", icon: "home" },
                         { title: "Manage user roles", link: "/Admin/ManageUserRoles/", icon: "dashboard" },
                         { title: "Manage users", link: "/Admin/Members/", icon: "people" }
                    ],
                    tests: [],
                    questions: [],
                    answerChoices: []
                }
            },
            methods: {
                getTest: function () {
                    let app = this;
                    $.ajax({
                        url: "/Test/GetTestComboBox/",
                        type: "get",
                        dataType: "Json",
                        success: function (res) {
                            $.each(res, function (index, value) {
                                app.tests.push(value );
                            })
                        }
                    });
                },
                onChange: function () {
                    let app = this;
                    var data2send = JSON.stringify(app.selectedTest);
                    //console.log(data2send);
                    $.ajax({
                        url: "/Test/GetQuestionComboBox/",
                        type: "post",
                        contentType: "application/json",
                        beforeSend: function (request) {
                            request.setRequestHeader("RequestVerificationToken", $("[name = '__RequestVerificationToken']").val());
                        },
                        data: data2send,
                        success: function (res) {
                            //console.log(res);
                            app.questions = [];
                            $.each(res, function (index, value) {
                                app.questions.push(value);
                            })
                        }
                    });
                },
                onChangeQuestion: function () {
                    let app = this;
                    var data2send = JSON.stringify(app.selectedQuestion);
                    $.ajax({
                        url: "/Test/GetAnswerChoices/",
                        type: "post",
                        contentType: "application/json",
                        beforeSend: function (request) {
                            request.setRequestHeader("RequestVerificationToken", $("[name = '__RequestVerificationToken']").val());
                        },
                        data: data2send,
                        success: function (res) {
                            app.answerChoices = [];
                            $.each(res, function (index, value) {
                                app.answerChoices.push(value);
                            })
                        }
                    });
                },
                draw: function () {
                    let app = this;
                    google.charts.load('current', { 'packages': ['corechart'] });
                    google.charts.setOnLoadCallback(drawChart);

                    function drawChart() {
                        var data = [["Question", "Count"]];
                        $.each(app.answerChoices, function (i, item) {
                            data.push([item.value, item.count]);
                        });
                        //console.log(data);
                        var chartData = google.visualization.arrayToDataTable(data);
                        //console.log(chartData);
                        var options = {
                            title: app.selectedQuestion,
                            is3D: true,
                        };
                        var chart = new google.visualization.PieChart(document.getElementById("chart"));
                        chart.draw(chartData, options);
                    }
                }
            },
            beforeMount() {
                this.getTest()
            }
        })
</script>
}
