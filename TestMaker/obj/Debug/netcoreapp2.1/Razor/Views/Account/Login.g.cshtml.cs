#pragma checksum "D:\MyGit\MyProject\TestMaker\TestMaker\Views\Account\Login.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f3dc67f6591745265871de7ed0f0ae527d56bb69"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Account_Login), @"mvc.1.0.view", @"/Views/Account/Login.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Account/Login.cshtml", typeof(AspNetCore.Views_Account_Login))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 2 "D:\MyGit\MyProject\TestMaker\TestMaker\Views\_ViewImports.cshtml"
using TestMaker.Models;

#line default
#line hidden
#line 3 "D:\MyGit\MyProject\TestMaker\TestMaker\Views\_ViewImports.cshtml"
using TestMaker.ViewModels;

#line default
#line hidden
#line 4 "D:\MyGit\MyProject\TestMaker\TestMaker\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f3dc67f6591745265871de7ed0f0ae527d56bb69", @"/Views/Account/Login.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4bc10e74c8a7c33899ebdcc776e44546a0ef5fb5", @"/Views/_ViewImports.cshtml")]
    public class Views_Account_Login : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<LoginViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(69, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 4 "D:\MyGit\MyProject\TestMaker\TestMaker\Views\Account\Login.cshtml"
   
    ViewData["Title"] = "Login Page";
 

#line default
#line hidden
            BeginContext(119, 43, true);
            WriteLiteral("<div id=\"app\">\r\n    <v-app light>\r\n        ");
            EndContext();
            BeginContext(163, 23, false);
#line 9 "D:\MyGit\MyProject\TestMaker\TestMaker\Views\Account\Login.cshtml"
   Write(Html.AntiForgeryToken());

#line default
#line hidden
            EndContext();
            BeginContext(186, 1656, true);
            WriteLiteral(@"
        <v-layout align-center justify-center row>
            <v-flex xs12 sm8 md4>
                <v-card class=""elevation-15"">
                    <v-toolbar color=""deep-orange darken-3"">
                        <v-toolbar-title>Login</v-toolbar-title>
                        <v-spacer></v-spacer>
                    </v-toolbar>
                    <v-card-text>
                            <v-text-field 
                                          prepend-icon=""person"" 
                                          v-model=""username"" 
                                          name=""username"" 
                                          label=""Login""
                                          v-validate=""'required|email'""
                                          :error-messages=""errors.collect('username')""
                                          data-vv-name=""username"">
                            </v-text-field>
                            <v-text-field 
                                    ");
            WriteLiteral(@"      prepend-icon=""lock"" 
                                          v-model=""password"" 
                                          name=""password"" 
                                          label=""Password"" 
                                          id=""password"" 
                                          type=""password""
                                          v-validate=""'required'""
                                          :error-messages=""errors.collect('password')""
                                          data-vv-name=""password"">
                            </v-text-field>
                            <v-btn ");
            EndContext();
            BeginContext(1843, 398, true);
            WriteLiteral(@"@click=""submit"" color=""blue darken-1"" block>Login</v-btn>
                            <v-btn href=""/SamplePersons/GetTest"" color=""lime lighten-1"" block>Find test</v-btn>
                            <v-btn href=""/Account/Register/"" color=""red"" block>Register</v-btn>
                    </v-card-text>
                </v-card>
            </v-flex>
        </v-layout>
    </v-app>
</div>
");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(2258, 1980, true);
                WriteLiteral(@" 
    <script>
        var app = new Vue({
            el: ""#app"",
            $_veeValidate: {
                validator:'new'
            },
            data() {
                return {
                    username: """",
                    password: """",
                    dictionary: {
                        attributes: {
                            email: ""E-mail Address""
                        }
                    }
                }
            },
            mounted() {
                this.$validator.localize('en', this.dictionary)
            },
            methods: {
                submit() {
                    this.$validator.validateAll().then((result) => {
                        if (result) {
                            data2send = JSON.stringify({ Username: this.username, Password: this.password });
                            $.ajax({
                                url: ""/Account/Login/"",
                                type: ""post"",
                        ");
                WriteLiteral(@"        beforeSend: function (request) {
                                    request.setRequestHeader(""RequestVerificationToken"", $(""[name = '__RequestVerificationToken']"").val());
                                },
                                contentType: ""application/json"",
                                data: data2send,
                                dataType: ""json"",
                                success: function (data) {
                                    if (data != false) {
                                        window.location.href = data;
                                    }
                                    else {
                                        alert(""Invalid login or password"");
                                    }
                                }
                            });
                        }
                    });
                }
            }
        })

    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public SignInManager<AppUser> SignInManager { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<LoginViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
