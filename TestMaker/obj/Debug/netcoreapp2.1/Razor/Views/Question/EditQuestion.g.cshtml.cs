#pragma checksum "D:\MyGit\MyProject\TestMaker\TestMaker\Views\Question\EditQuestion.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bd43f409f76076b7e522a71af9228deb6be5e4b5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Question_EditQuestion), @"mvc.1.0.view", @"/Views/Question/EditQuestion.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Question/EditQuestion.cshtml", typeof(AspNetCore.Views_Question_EditQuestion))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 2 "D:\MyGit\MyProject\TestMaker\TestMaker\Views\_ViewImports.cshtml"
using TestMaker.Models;

#line default
#line hidden
#line 3 "D:\MyGit\MyProject\TestMaker\TestMaker\Views\_ViewImports.cshtml"
using TestMaker.ViewModels;

#line default
#line hidden
#line 4 "D:\MyGit\MyProject\TestMaker\TestMaker\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bd43f409f76076b7e522a71af9228deb6be5e4b5", @"/Views/Question/EditQuestion.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4bc10e74c8a7c33899ebdcc776e44546a0ef5fb5", @"/Views/_ViewImports.cshtml")]
    public class Views_Question_EditQuestion : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<QuestionViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(26, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "D:\MyGit\MyProject\TestMaker\TestMaker\Views\Question\EditQuestion.cshtml"
   ViewData["Title"] = "Edit Question"; 

#line default
#line hidden
            BeginContext(71, 37, true);
            WriteLiteral("<div id=\"app\">\r\n    <v-app>\r\n        ");
            EndContext();
            BeginContext(109, 71, false);
#line 6 "D:\MyGit\MyProject\TestMaker\TestMaker\Views\Question\EditQuestion.cshtml"
   Write(await Html.PartialAsync("~/Views/Shared/_RightSidePanelPartial.cshtml"));

#line default
#line hidden
            EndContext();
            BeginContext(180, 10, true);
            WriteLiteral("\r\n        ");
            EndContext();
            BeginContext(191, 23, false);
#line 7 "D:\MyGit\MyProject\TestMaker\TestMaker\Views\Question\EditQuestion.cshtml"
   Write(Html.AntiForgeryToken());

#line default
#line hidden
            EndContext();
            BeginContext(214, 509, true);
            WriteLiteral(@"
        <v-content>
            <v-container align-center justify-end row fill-height>
                <v-layout xs12 sm8 md6>
                    <v-flex>
                        <v-card class=""elevation-15"">
                            <v-toolbar color=""deep-orange darken-3"">
                                <v-toolbar-title>Edit question</v-toolbar-title>
                                <v-spacer></v-spacer>
                            </v-toolbar>
                            <v-card-text>
");
            EndContext();
            BeginContext(833, 1024, true);
            WriteLiteral(@"                                    <v-text-field 
                                                  v-model=""questionId""
                                                  name=""questionId"" 
                                                  label=""QuestionId"" 
                                                  readonly 
                                                  v-show=""false""></v-text-field>
                                    <v-text-field 
                                                  name=""text"" 
                                                  label=""Change question"" 
                                                  clearable
                                                  v-validate=""'required'""
                                                  :error-messages=""errors.collect('text')""
                                                  data-vv-name=""text""
                                                  v-model=""Text""></v-text-field>
                                    <v-btn ");
            EndContext();
            BeginContext(1858, 52, true);
            WriteLiteral("@click=\"submit\" color=\"blue darken-1\">Save</v-btn>\r\n");
            EndContext();
            BeginContext(1955, 217, true);
            WriteLiteral("\r\n                            </v-card-text>\r\n                        </v-card>\r\n                    </v-flex>\r\n                </v-layout>\r\n            </v-container>\r\n\r\n        </v-content>\r\n    </v-app>\r\n</div>\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(2189, 316, true);
                WriteLiteral(@"
    <script>
        var app = new Vue({
            el: '#app',
            $_veeValidate: {
                validator:""new""
            },

                        data() {
                            return {
                                drawer: false,
                                questionId: """);
                EndContext();
                BeginContext(2506, 34, false);
#line 57 "D:\MyGit\MyProject\TestMaker\TestMaker\Views\Question\EditQuestion.cshtml"
                                        Write(ViewContext.RouteData.Values["id"]);

#line default
#line hidden
                EndContext();
                BeginContext(2540, 1747, true);
                WriteLiteral(@""",
                                Text:"""",
                                itemsForMembers: [
                                    { title: ""Home"", link: ""/Home/Index/"", icon: ""home"", id: ""homeBtn"" },
                                    { title: ""Create test"", link: ""/Test/CreateTest/"", icon: ""ballot"" },
                                    { title: ""Graphs"", link: ""/Test/Graphs/"", icon: ""equalizer"" }

                                ],
                                itemsLoginPartial: [
                                    { title: ""Login"", link: ""/Account/Login/"" },
                                    { title: ""Register"", link: ""/Account/Register/"" }
                                ],
                                itemsForAdmins: [
                                    { title: ""Home"", link: ""/Home/Index/"", icon: ""home"" },
                                    { title: ""Manage user roles"", link: ""/Admin/ManageUserRoles/"", icon: ""dashboard"" },
                                    { title: ""Manage ");
                WriteLiteral(@"users"", link: ""/Admin/Members/"", icon: ""people"" }
                                ],
                                headers: [
                                    { text: ""Title"", align: ""center"", sortable: false, value: ""title"" },
                                    { text: ""Description"", value: ""description"" },
                                    { text: ""Create date"", value: ""createDate"" },
                                    { text: ""Last modified date"", value: ""lastMD"" },
                                ],
                                tests: [],
                                dropDownFromResult: [
                                    { title: ""Single answer"", link: ""/Question/CreateSingleAnswer/");
                EndContext();
                BeginContext(4288, 34, false);
#line 82 "D:\MyGit\MyProject\TestMaker\TestMaker\Views\Question\EditQuestion.cshtml"
                                                                                             Write(ViewContext.RouteData.Values["id"]);

#line default
#line hidden
                EndContext();
                BeginContext(4322, 102, true);
                WriteLiteral("\" },\r\n                                    { title: \"Short answer\", link: \"/Question/CreateShortAnswer/");
                EndContext();
                BeginContext(4425, 34, false);
#line 83 "D:\MyGit\MyProject\TestMaker\TestMaker\Views\Question\EditQuestion.cshtml"
                                                                                           Write(ViewContext.RouteData.Values["id"]);

#line default
#line hidden
                EndContext();
                BeginContext(4459, 108, true);
                WriteLiteral("\" },\r\n                                    { title: \"Multiple choice\", link: \"/Question/CreateMultipleChoice/");
                EndContext();
                BeginContext(4568, 34, false);
#line 84 "D:\MyGit\MyProject\TestMaker\TestMaker\Views\Question\EditQuestion.cshtml"
                                                                                                 Write(ViewContext.RouteData.Values["id"]);

#line default
#line hidden
                EndContext();
                BeginContext(4602, 104, true);
                WriteLiteral("\" },\r\n                                    { title: \"Range answer\", link: \"/Question/CreateRangeQuestion/");
                EndContext();
                BeginContext(4707, 34, false);
#line 85 "D:\MyGit\MyProject\TestMaker\TestMaker\Views\Question\EditQuestion.cshtml"
                                                                                             Write(ViewContext.RouteData.Values["id"]);

#line default
#line hidden
                EndContext();
                BeginContext(4741, 825, true);
                WriteLiteral(@""" }
                                ],
                                dictionary: {
                                    attributes: {
                                        text: ""Question""
                                    }
                                }

                            }
            },
            mounted() {
                this.$validator.localize(""en"", this.dictionary)
            },
            methods: {
                submit() {
                    this.$validator.validateAll().then((result) => {
                        if (result) {
                            data2send = JSON.stringify({ Text: this.Text, QuestionId: this.questionId });
                            var testId = this.TestId;
                            $.ajax({
                                url: """);
                EndContext();
                BeginContext(5567, 38, false);
#line 105 "D:\MyGit\MyProject\TestMaker\TestMaker\Views\Question\EditQuestion.cshtml"
                                 Write(Url.Action("EditQuestion", "Question"));

#line default
#line hidden
                EndContext();
                BeginContext(5605, 836, true);
                WriteLiteral(@""",
                                type: ""post"",
                                beforeSend: function (request) {
                                    request.setRequestHeader(""RequestVerificationToken"", $(""[name = '__RequestVerificationToken']"").val());
                                },
                                contentType: ""application/json; charset=utf-8"",
                                data: data2send,
                                success: function (data) {
                                    if (data != null) {
                                        window.location.replace(data);
                                    }
                                }
                            });
                        }
                    });
                }
            }

        })
    </script>
");
                EndContext();
            }
            );
            BeginContext(6444, 6, true);
            WriteLiteral("\r\n\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<QuestionViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
